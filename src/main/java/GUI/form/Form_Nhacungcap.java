/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.form;

import BUS.NhacungcapBUS;
import DTO.NhacungcapDTO;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrben
 */
public class Form_Nhacungcap extends javax.swing.JPanel {

    private NhacungcapBUS nhacungcapBUS;
    private List<NhacungcapDTO> listNhacungcap;
    private DefaultTableModel tableModel;

    /**
     * Creates new form Form_Nhacungcap
     */
    public Form_Nhacungcap() {
        initComponents();
        nhacungcapBUS = new NhacungcapBUS();
        tableModel = (DefaultTableModel) nccTbl.getModel();
        loadData();
    }

    private void loadData() {
        tableModel.setRowCount(0);
        listNhacungcap = nhacungcapBUS.getAllNhacungcap();

        for (NhacungcapDTO ncc : listNhacungcap) {
            tableModel.addRow(new Object[] {
                    ncc.getMa_ncc(),
                    ncc.getTen_ncc(),
                    ncc.getDia_chi(),
                    ncc.getDien_thoai(),
                    ncc.getEmail(),
                    ncc.getCreated_at()
            });
        }

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        nccTbl.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        nccTbl.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        nccTbl.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        nccTbl.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtf_search = new javax.swing.JTextField();
        reloadBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        infoBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        nccTbl = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtf_search.setText("Search by ID/name");
        jtf_search.setPreferredSize(new java.awt.Dimension(300, 22));
        jtf_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_searchFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_searchFocusLost(evt);
            }
        });
        jtf_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_searchActionPerformed(evt);
            }
        });

        reloadBtn.setBackground(new java.awt.Color(153, 153, 153));
        reloadBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/icons8-reload-30.png"))); // NOI18N
        reloadBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reloadBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reloadBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        reloadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reloadBtnMouseClicked(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(204, 204, 204));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/plus.png"))); // NOI18N
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(204, 204, 204));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/office-material.png"))); // NOI18N
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/delete.png"))); // NOI18N
        deleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });

        infoBtn.setBackground(new java.awt.Color(204, 204, 204));
        infoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/information.png"))); // NOI18N
        infoBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        infoBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        infoBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        infoBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        infoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoBtnMouseClicked(evt);
            }
        });

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/search.png"))); // NOI18N
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infoBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 300,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(infoBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jtf_search, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(reloadBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        nccTbl.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "Mã nhà cung cấp", "Tên nhà cung cấp", "Địa chỉ", "Điện thoại", "Email", "Ngày tạo"
                }) {
            Class[] types = new Class[] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        nccTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nccTblClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nccTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 743,
                                                Short.MAX_VALUE))
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                                .addGap(61, 61, 61)));
    }// </editor-fold>//GEN-END:initComponents

    private void jtf_searchFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jtf_searchFocusGained
        if (jtf_search.getText().equals("Search by ID/name")) {
            jtf_search.setText("");
        }
    }// GEN-LAST:event_jtf_searchFocusGained

    private void jtf_searchFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jtf_searchFocusLost
        if (jtf_search.getText().isEmpty()) {
            jtf_search.setText("Search by ID/name");
        }
    }// GEN-LAST:event_jtf_searchFocusLost

    private void jtf_searchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jtf_searchActionPerformed
        searchNhacungcap();
    }// GEN-LAST:event_jtf_searchActionPerformed

    private void reloadBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_reloadBtnMouseClicked
        loadData();
        jtf_search.setText("Search by ID/name");
    }// GEN-LAST:event_reloadBtnMouseClicked

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addBtnMouseClicked
        showAddDialog();
    }// GEN-LAST:event_addBtnMouseClicked

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_updateBtnMouseClicked
        int selectedRow = nccTbl.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà cung cấp để cập nhật", "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maNcc = nccTbl.getValueAt(selectedRow, 0).toString();
        showUpdateDialog(maNcc);
    }// GEN-LAST:event_updateBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_deleteBtnMouseClicked
        int selectedRow = nccTbl.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà cung cấp để xóa", "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maNcc = nccTbl.getValueAt(selectedRow, 0).toString();
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa nhà cung cấp này?", "Xác nhận xóa",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            boolean success = nhacungcapBUS.deleteNhacungcap(maNcc);
            if (success) {
                JOptionPane.showMessageDialog(this, "Xóa nhà cung cấp thành công", "Thông báo",
                        JOptionPane.INFORMATION_MESSAGE);
                loadData();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa nhà cung cấp thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }// GEN-LAST:event_deleteBtnMouseClicked

    private void infoBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_infoBtnMouseClicked
        int selectedRow = nccTbl.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà cung cấp để xem thông tin", "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String maNcc = nccTbl.getValueAt(selectedRow, 0).toString();
        NhacungcapDTO ncc = nhacungcapBUS.getNhacungcapByMa(maNcc);

        if (ncc != null) {
            String info = "Mã nhà cung cấp: " + ncc.getMa_ncc() + "\n"
                    + "Tên nhà cung cấp: " + ncc.getTen_ncc() + "\n"
                    + "Địa chỉ: " + ncc.getDia_chi() + "\n"
                    + "Điện thoại: " + ncc.getDien_thoai() + "\n"
                    + "Email: " + ncc.getEmail() + "\n"
                    + "Ngày tạo: " + ncc.getCreated_at();

            JOptionPane.showMessageDialog(this, info, "Thông tin nhà cung cấp", JOptionPane.INFORMATION_MESSAGE);
        }
    }// GEN-LAST:event_infoBtnMouseClicked

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_searchBtnMouseClicked
        searchNhacungcap();
    }// GEN-LAST:event_searchBtnMouseClicked

    private void nccTblClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_nccTblClicked
        // Có thể thêm code xử lý khi click vào bảng nếu cần
    }// GEN-LAST:event_nccTblClicked

    private void searchNhacungcap() {
        String searchText = jtf_search.getText().trim();
        if (searchText.equals("Search by ID/name")) {
            return;
        }

        tableModel.setRowCount(0);

        for (NhacungcapDTO ncc : listNhacungcap) {
            if (ncc.getMa_ncc().toLowerCase().contains(searchText.toLowerCase()) ||
                    ncc.getTen_ncc().toLowerCase().contains(searchText.toLowerCase())) {
                tableModel.addRow(new Object[] {
                        ncc.getMa_ncc(),
                        ncc.getTen_ncc(),
                        ncc.getDia_chi(),
                        ncc.getDien_thoai(),
                        ncc.getEmail(),
                        ncc.getCreated_at()
                });
            }
        }
    }

    private void showAddDialog() {
        // Create a new JDialog for adding supplier
        javax.swing.JDialog addDialog = new javax.swing.JDialog();
        addDialog.setTitle("Thêm nhà cung cấp mới");
        addDialog.setSize(400, 300);
        addDialog.setLocationRelativeTo(this);
        addDialog.setModal(true);

        // Create panel for the form
        javax.swing.JPanel formPanel = new javax.swing.JPanel();
        formPanel.setLayout(new java.awt.GridLayout(6, 2, 10, 10));
        formPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Create form components
        javax.swing.JLabel maLabel = new javax.swing.JLabel("Mã nhà cung cấp:");
        javax.swing.JTextField maField = new javax.swing.JTextField(15);

        javax.swing.JLabel tenLabel = new javax.swing.JLabel("Tên nhà cung cấp:");
        javax.swing.JTextField tenField = new javax.swing.JTextField(15);

        javax.swing.JLabel diaChiLabel = new javax.swing.JLabel("Địa chỉ:");
        javax.swing.JTextField diaChiField = new javax.swing.JTextField(15);

        javax.swing.JLabel dienThoaiLabel = new javax.swing.JLabel("Điện thoại (10 số):");
        javax.swing.JTextField dienThoaiField = new javax.swing.JTextField(15);

        javax.swing.JLabel emailLabel = new javax.swing.JLabel("Email:");
        javax.swing.JTextField emailField = new javax.swing.JTextField(15);

        // Add components to form panel
        formPanel.add(maLabel);
        formPanel.add(maField);
        formPanel.add(tenLabel);
        formPanel.add(tenField);
        formPanel.add(diaChiLabel);
        formPanel.add(diaChiField);
        formPanel.add(dienThoaiLabel);
        formPanel.add(dienThoaiField);
        formPanel.add(emailLabel);
        formPanel.add(emailField);

        // Create buttons
        javax.swing.JButton saveButton = new javax.swing.JButton("Lưu");
        javax.swing.JButton cancelButton = new javax.swing.JButton("Hủy");

        // Create button panel
        javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        buttonPanel.add(saveButton);
        buttonPanel.add(cancelButton);

        // Add action listeners to buttons
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String maNcc = maField.getText().trim();
                String tenNcc = tenField.getText().trim();
                String diaChi = diaChiField.getText().trim();
                String dienThoai = dienThoaiField.getText().trim();
                String email = emailField.getText().trim();

                // Validate input
                if (maNcc.isEmpty()) {
                    JOptionPane.showMessageDialog(addDialog, "Mã nhà cung cấp không được để trống", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Kiểm tra mã đã tồn tại chưa
                if (nhacungcapBUS.getNhacungcapByMa(maNcc) != null) {
                    JOptionPane.showMessageDialog(addDialog, "Mã nhà cung cấp đã tồn tại", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (tenNcc.isEmpty()) {
                    JOptionPane.showMessageDialog(addDialog, "Tên nhà cung cấp không được để trống", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (diaChi.isEmpty()) {
                    JOptionPane.showMessageDialog(addDialog, "Địa chỉ không được để trống", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (dienThoai.isEmpty() || !dienThoai.matches("^[0-9]{10}$")) {
                    JOptionPane.showMessageDialog(addDialog, "Số điện thoại không hợp lệ (phải có 10 số)", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (email.isEmpty() || !email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
                    JOptionPane.showMessageDialog(addDialog, "Email không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                boolean success = nhacungcapBUS.addNhacungcap(maNcc, tenNcc, diaChi, dienThoai, email);
                if (success) {
                    JOptionPane.showMessageDialog(addDialog, "Thêm nhà cung cấp thành công", "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    loadData();
                    addDialog.dispose();
                } else {
                    JOptionPane.showMessageDialog(addDialog,
                            "Thêm nhà cung cấp thất bại. Vui lòng kiểm tra lại thông tin", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDialog.dispose();
            }
        });

        // Set up the dialog layout
        addDialog.setLayout(new java.awt.BorderLayout());
        addDialog.add(formPanel, java.awt.BorderLayout.CENTER);
        addDialog.add(buttonPanel, java.awt.BorderLayout.SOUTH);

        // Show the dialog
        addDialog.setVisible(true);
    }

    private void showUpdateDialog(String maNcc) {
        NhacungcapDTO ncc = nhacungcapBUS.getNhacungcapByMa(maNcc);
        if (ncc == null) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy nhà cung cấp", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create a new JDialog for updating supplier
        javax.swing.JDialog updateDialog = new javax.swing.JDialog();
        updateDialog.setTitle("Cập nhật nhà cung cấp");
        updateDialog.setSize(400, 300);
        updateDialog.setLocationRelativeTo(this);
        updateDialog.setModal(true);

        // Create panel for the form
        javax.swing.JPanel formPanel = new javax.swing.JPanel();
        formPanel.setLayout(new java.awt.GridLayout(6, 2, 10, 10));
        formPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Create form components
        javax.swing.JLabel maLabel = new javax.swing.JLabel("Mã nhà cung cấp:");
        javax.swing.JTextField maField = new javax.swing.JTextField(ncc.getMa_ncc());
        maField.setEditable(false); // Không cho phép sửa mã

        javax.swing.JLabel tenLabel = new javax.swing.JLabel("Tên nhà cung cấp:");
        javax.swing.JTextField tenField = new javax.swing.JTextField(ncc.getTen_ncc());

        javax.swing.JLabel diaChiLabel = new javax.swing.JLabel("Địa chỉ:");
        javax.swing.JTextField diaChiField = new javax.swing.JTextField(ncc.getDia_chi());

        javax.swing.JLabel dienThoaiLabel = new javax.swing.JLabel("Điện thoại (10 số):");
        javax.swing.JTextField dienThoaiField = new javax.swing.JTextField(ncc.getDien_thoai());

        javax.swing.JLabel emailLabel = new javax.swing.JLabel("Email:");
        javax.swing.JTextField emailField = new javax.swing.JTextField(ncc.getEmail());

        // Add components to form panel
        formPanel.add(maLabel);
        formPanel.add(maField);
        formPanel.add(tenLabel);
        formPanel.add(tenField);
        formPanel.add(diaChiLabel);
        formPanel.add(diaChiField);
        formPanel.add(dienThoaiLabel);
        formPanel.add(dienThoaiField);
        formPanel.add(emailLabel);
        formPanel.add(emailField);

        // Create buttons
        javax.swing.JButton saveButton = new javax.swing.JButton("Lưu");
        javax.swing.JButton cancelButton = new javax.swing.JButton("Hủy");

        // Create button panel
        javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        buttonPanel.add(saveButton);
        buttonPanel.add(cancelButton);

        // Add action listeners to buttons
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String tenNcc = tenField.getText().trim();
                String diaChi = diaChiField.getText().trim();
                String dienThoai = dienThoaiField.getText().trim();
                String email = emailField.getText().trim();

                // Validate input
                if (tenNcc.isEmpty()) {
                    JOptionPane.showMessageDialog(updateDialog, "Tên nhà cung cấp không được để trống", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (diaChi.isEmpty()) {
                    JOptionPane.showMessageDialog(updateDialog, "Địa chỉ không được để trống", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (dienThoai.isEmpty() || !dienThoai.matches("^[0-9]{10}$")) {
                    JOptionPane.showMessageDialog(updateDialog, "Số điện thoại không hợp lệ (phải có 10 số)", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (email.isEmpty() || !email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
                    JOptionPane.showMessageDialog(updateDialog, "Email không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                boolean success = nhacungcapBUS.updateNhacungcap(maNcc, tenNcc, diaChi, dienThoai, email);
                if (success) {
                    JOptionPane.showMessageDialog(updateDialog, "Cập nhật nhà cung cấp thành công", "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    loadData();
                    updateDialog.dispose();
                } else {
                    JOptionPane.showMessageDialog(updateDialog,
                            "Cập nhật nhà cung cấp thất bại. Vui lòng kiểm tra lại thông tin", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDialog.dispose();
            }
        });

        // Set up the dialog layout
        updateDialog.setLayout(new java.awt.BorderLayout());
        updateDialog.add(formPanel, java.awt.BorderLayout.CENTER);
        updateDialog.add(buttonPanel, java.awt.BorderLayout.SOUTH);

        // Show the dialog
        updateDialog.setVisible(true);
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addBtnActionPerformed
        showAddDialog();
    }// GEN-LAST:event_addBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton infoBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtf_search;
    private javax.swing.JTable nccTbl;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
