/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.form;

import BUS.KhachhangBUS;
import DTO.KhachhangDTO;
import GUI.component.Khachhang.AddUpdateKHForm;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mrben
 */
public class Form_Khachhang extends javax.swing.JPanel {
    public KhachhangBUS khachHangBUS;
    public Object selectedMaKhachHang;

    /**
     * Creates new form Form_Khachhang
     */
    public Form_Khachhang() {
        initComponents();
        khachHangBUS = new KhachhangBUS();

        loadDataIntoKhachHangTbl();
    }

    public void addPlaceHolderStyle(JTextField jtf) {
        Font f = jtf.getFont();
        f = f.deriveFont(Font.ITALIC);
        jtf.setFont(f);
        jtf.setForeground(Color.gray);
    }

    public void removePlaceHolderStyle(JTextField jtf) {
        Font f = jtf.getFont();
        f = f.deriveFont(Font.PLAIN | Font.BOLD);
        jtf.setFont(f);
        jtf.setForeground(Color.black);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jtf_search = new javax.swing.JTextField();
        reloadBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        infoBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        khachhangTbl = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtf_search.setText("Search by ID/name");
        jtf_search.setPreferredSize(new java.awt.Dimension(300, 22));
        jtf_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_searchFocusLost(evt);
            }
        });
        jtf_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_searchActionPerformed(evt);
            }
        });

        reloadBtn.setBackground(new java.awt.Color(153, 153, 153));
        reloadBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/icons8-reload-30.png"))); // NOI18N
        reloadBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reloadBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reloadBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        reloadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reloadBtnMouseClicked(evt);
            }
        });

        addBtn.setBackground(new java.awt.Color(204, 204, 204));
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/plus.png"))); // NOI18N
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(204, 204, 204));
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/delete.png"))); // NOI18N
        deleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(204, 204, 204));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/office-material.png"))); // NOI18N
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });

        infoBtn.setBackground(new java.awt.Color(204, 204, 204));
        infoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/information.png"))); // NOI18N
        infoBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        infoBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        infoBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        infoBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        infoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                infoBtnMouseClicked(evt);
            }
        });

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/icon/search.png"))); // NOI18N
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchBtn.setPreferredSize(new java.awt.Dimension(40, 40));
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(reloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(infoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reloadBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        khachhangTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Địa chỉ", "Điện thoại", "Ngày tham gia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        khachhangTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                khachhangTblClicked(evt);
            }
        });
        jScrollPane1.setViewportView(khachhangTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        String searchText = jtf_search.getText().trim();
    
        // Nếu ô tìm kiếm trống hoặc chứa placeholder, hiển thị tất cả khách hàng
        if (searchText.isEmpty() || searchText.equals("Search by ID/name")) {
            loadDataIntoKhachHangTbl();
            return;
        }
        
        // Tìm kiếm khách hàng
        ArrayList<KhachhangDTO> searchResults = khachHangBUS.searchKhachhang(searchText);
        
        // Hiển thị kết quả tìm kiếm
        displaySearchResults(searchResults);
    }//GEN-LAST:event_searchBtnMouseClicked

    public void loadDataIntoKhachHangTbl() {
        this.khachHangBUS.ListKhachhang();
        DefaultTableModel model = (DefaultTableModel) khachhangTbl.getModel();
        model.setRowCount(0);
        ArrayList<KhachhangDTO> ListKhachhang = khachHangBUS.getList();

        for (int i = 0; i < ListKhachhang.size(); i++) {
            Object[] row = new Object[5];
            row[0] = ListKhachhang.get(i).getMa_khach_hang();
            row[1] = ListKhachhang.get(i).getHo_ten();
            row[2] = ListKhachhang.get(i).getDia_chi();
            row[3] = ListKhachhang.get(i).getDien_thoai();
            row[4] = ListKhachhang.get(i).getCreated_at();
            model.addRow(row);
        }

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        khachhangTbl.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        khachhangTbl.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        khachhangTbl.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);

    }

    private void jtf_searchFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jtf_searchFocusGained
        if (jtf_search.getText().equals("Search by ID/name")) {
            jtf_search.setText(null);
            jtf_search.requestFocus();
            removePlaceHolderStyle(jtf_search);
        }
    }// GEN-LAST:event_jtf_searchFocusGained

    private void jtf_searchFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jtf_searchFocusLost
        if (jtf_search.getText().length() == 0) {
            addPlaceHolderStyle(jtf_search);
            jtf_search.setText("Search by ID/name");
        }
    }// GEN-LAST:event_jtf_searchFocusLost

    private void jtf_searchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jtf_searchActionPerformed
        String searchText = jtf_search.getText().trim();

        // Nếu ô tìm kiếm trống hoặc chứa placeholder, hiển thị tất cả khách hàng
        if (searchText.isEmpty() || searchText.equals("Search by ID/name")) {
            loadDataIntoKhachHangTbl();
            return;
        }

        // Tìm kiếm khách hàng
        ArrayList<KhachhangDTO> searchResults = khachHangBUS.searchKhachhang(searchText);

        // Hiển thị kết quả tìm kiếm
        displaySearchResults(searchResults);
    }// GEN-LAST:event_jtf_searchActionPerformed

    /**
     * Hiển thị kết quả tìm kiếm lên bảng
     * 
     * @param searchResults Danh sách khách hàng tìm được
     */
    private void displaySearchResults(ArrayList<KhachhangDTO> searchResults) {
        DefaultTableModel model = (DefaultTableModel) khachhangTbl.getModel();
        model.setRowCount(0);

        if (searchResults.isEmpty()) {
            // Không tìm thấy kết quả
            JOptionPane.showMessageDialog(
                    this,
                    "Không tìm thấy khách hàng phù hợp!",
                    "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Hiển thị kết quả tìm kiếm
        for (KhachhangDTO kh : searchResults) {
            Object[] row = new Object[5];
            row[0] = kh.getMa_khach_hang();
            row[1] = kh.getHo_ten();
            row[2] = kh.getDia_chi();
            row[3] = kh.getDien_thoai();
            row[4] = kh.getCreated_at();
            model.addRow(row);
        }

        // Căn giữa các cột
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        khachhangTbl.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        khachhangTbl.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
        khachhangTbl.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
    }

    private void reloadBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_reloadBtnMouseClicked
        // Reset ô tìm kiếm
        addPlaceHolderStyle(jtf_search);
        jtf_search.setText("Search by ID/name");

        // Load lại dữ liệu
        loadDataIntoKhachHangTbl();
    }// GEN-LAST:event_reloadBtnMouseClicked

    private void infoBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_infoBtnMouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_infoBtnMouseClicked

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_updateBtnMouseClicked
        if (selectedMaKhachHang != null) {
            // Tạo form cập nhật
            AddUpdateKHForm form = new AddUpdateKHForm();

            // Lấy thông tin khách hàng cần cập nhật
            KhachhangDTO kh = khachHangBUS.getKhachhangByMaKH(selectedMaKhachHang.toString());

            if (kh != null) {
                // Đổ dữ liệu vào form
                form.setDataForUpdate(kh);

                // Disable trường mã khách hàng
                form.disableFieldForUpdate();

                // Thêm WindowListener để biết khi nào form đóng
                form.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                        // Load lại dữ liệu vào bảng khi form đóng
                        loadDataIntoKhachHangTbl();
                    }
                });

                form.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Không tìm thấy thông tin khách hàng!",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng chọn khách hàng cần cập nhật!",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
        }
    }// GEN-LAST:event_updateBtnMouseClicked

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_deleteBtnMouseClicked
        if (selectedMaKhachHang != null) {
            // Hiển thị hộp thoại xác nhận
            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Bạn có chắc chắn muốn xóa khách hàng này?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Thực hiện xóa khách hàng thông qua BUS
                boolean success = khachHangBUS.DeleteKhachhang(selectedMaKhachHang.toString());

                if (success) {
                    JOptionPane.showMessageDialog(
                            this,
                            "Xóa khách hàng thành công!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);

                    // Cập nhật lại bảng
                    loadDataIntoKhachHangTbl();

                    // Reset biến lưu mã khách hàng
                    selectedMaKhachHang = null;

                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Xóa khách hàng thất bại!",
                            "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng chọn khách hàng cần xóa!",
                    "Thông báo",
                    JOptionPane.WARNING_MESSAGE);
        }
    }// GEN-LAST:event_deleteBtnMouseClicked

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_addBtnMouseClicked

    private void khachhangTblClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_khachhangTblClicked
        int selectedRow = khachhangTbl.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy giá trị ở cột 0 (cột đầu tiên) của hàng được chọn
            String maKhachHang = khachhangTbl.getValueAt(selectedRow, 0).toString();
            System.out.println("Mã khách hàng: " + maKhachHang);

            // Lưu mã khách hàng vào biến để sử dụng cho các thao tác khác
            selectedMaKhachHang = maKhachHang;

        }
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addBtnActionPerformed
        AddUpdateKHForm form = new AddUpdateKHForm();

        // Thêm WindowListener để biết khi nào form đóng
        form.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Load lại dữ liệu vào bảng khi form đóng
                loadDataIntoKhachHangTbl();
            }
        });

        form.setVisible(true);
    }// GEN-LAST:event_addBtnActionPerformed

    private void jtf_searchKeyReleased(java.awt.event.KeyEvent evt) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton infoBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jtf_search;
    private javax.swing.JTable khachhangTbl;
    private javax.swing.JButton reloadBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
