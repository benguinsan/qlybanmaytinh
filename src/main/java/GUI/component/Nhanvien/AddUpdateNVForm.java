/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.component.Nhanvien;

import BUS.NhanvienBUS;
import DTO.NhanvienDTO;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author mrben
 */
public class AddUpdateNVForm extends javax.swing.JFrame {
    public NhanvienBUS nhanvienBUS;

    public boolean isUpdateMode = false;
    private String maNhanVienForUpdate = null;

    /**
     * Creates new form AddUpdateNVForm
     */
    public AddUpdateNVForm() {
        initComponents();
        nhanvienBUS = new NhanvienBUS();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        information_panel = new javax.swing.JPanel();
        txt_tenkh = new javax.swing.JTextField();
        txt_diachi = new javax.swing.JTextField();
        txt_sdt = new javax.swing.JTextField();
        txt_manv = new javax.swing.JTextField();
        cbGioiTinh = new javax.swing.JComboBox<>();
        txt_email = new javax.swing.JTextField();
        NgaySinhPicker = new com.toedter.calendar.JDateChooser();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nhân viên");
        setResizable(false);

        information_panel.setBackground(new java.awt.Color(255, 255, 255));
        information_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Information",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        information_panel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        information_panel.setName(""); // NOI18N

        txt_tenkh.setBorder(javax.swing.BorderFactory.createTitledBorder("Họ tên"));
        txt_tenkh.setPreferredSize(new java.awt.Dimension(69, 40));
        txt_tenkh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tenkhActionPerformed(evt);
            }
        });

        txt_diachi.setBorder(javax.swing.BorderFactory.createTitledBorder("Địa chỉ"));
        txt_diachi.setPreferredSize(new java.awt.Dimension(69, 40));
        txt_diachi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_diachiActionPerformed(evt);
            }
        });

        txt_sdt.setBorder(javax.swing.BorderFactory.createTitledBorder("Số điện thoại"));
        txt_sdt.setPreferredSize(new java.awt.Dimension(69, 40));
        txt_sdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sdtActionPerformed(evt);
            }
        });

        txt_manv.setBorder(javax.swing.BorderFactory.createTitledBorder("Mã nhân viên"));
        txt_manv.setPreferredSize(new java.awt.Dimension(69, 40));
        txt_manv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_manvActionPerformed(evt);
            }
        });

        cbGioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));
        cbGioiTinh.setBorder(javax.swing.BorderFactory.createTitledBorder("Giới tính"));
        cbGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGioiTinhActionPerformed(evt);
            }
        });

        txt_email.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        txt_email.setPreferredSize(new java.awt.Dimension(69, 40));
        txt_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_emailActionPerformed(evt);
            }
        });

        NgaySinhPicker.setBorder(javax.swing.BorderFactory.createTitledBorder("Ngày sinh"));
        NgaySinhPicker.setDateFormatString("dd, MM, yyyy");

        javax.swing.GroupLayout information_panelLayout = new javax.swing.GroupLayout(information_panel);
        information_panel.setLayout(information_panelLayout);
        information_panelLayout.setHorizontalGroup(
                information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(information_panelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(information_panelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_diachi, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(information_panelLayout.createSequentialGroup()
                                                .addGroup(information_panelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(txt_manv, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                124, Short.MAX_VALUE)
                                                        .addComponent(cbGioiTinh, 0,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(information_panelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(txt_tenkh, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                240, Short.MAX_VALUE)
                                                        .addComponent(NgaySinhPicker,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(txt_sdt, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txt_email, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap()));
        information_panelLayout.setVerticalGroup(
                information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(information_panelLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(information_panelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_tenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_manv, javax.swing.GroupLayout.PREFERRED_SIZE, 45,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(information_panelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbGioiTinh)
                                        .addComponent(NgaySinhPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 0,
                                                Short.MAX_VALUE))
                                .addGap(20, 20, 20)
                                .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_diachi, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(11, Short.MAX_VALUE)));

        saveBtn.setBackground(new java.awt.Color(0, 204, 51));
        saveBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("SAVE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(information_panel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(159, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(information_panel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 5, Short.MAX_VALUE)));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_tenkhActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_tenkhActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txt_tenkhActionPerformed

    private void txt_diachiActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_diachiActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txt_diachiActionPerformed

    private void txt_sdtActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_sdtActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txt_sdtActionPerformed

    private void txt_manvActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_manvActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txt_manvActionPerformed

    private void txt_emailActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txt_emailActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txt_emailActionPerformed

    public void disableFieldForUpdate() {
        // mã nhân viên
        txt_manv.setEditable(false);
        txt_manv.setBackground(new java.awt.Color(240, 240, 240));
        
        //ngày sinh
        NgaySinhPicker.setEnabled(false);
        NgaySinhPicker.setBackground(new java.awt.Color(240, 240, 240));
    }

    public void setDataForUpdate(NhanvienDTO nv) {
        if (nv != null) {
            isUpdateMode = true;
            maNhanVienForUpdate = nv.getMa_nhan_vien();

            // Đổ dữ liệu vào các trường
            txt_manv.setText(nv.getMa_nhan_vien());
            txt_tenkh.setText(nv.getHo_ten());
            txt_diachi.setText(nv.getDia_chi());
            txt_sdt.setText(nv.getDien_thoai());
            cbGioiTinh.setSelectedItem(nv.getGioi_tinh());
            NgaySinhPicker.setDate(nv.getNgay_sinh());
            txt_email.setText(nv.getEmail());
        }
    }

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveBtnActionPerformed
        // Kiểm tra dữ liệu nhập vào
        if (validateInput()) {
            try {
                // Lấy dữ liệu từ form
                String maNV = txt_manv.getText().trim();
                String hoTen = txt_tenkh.getText().trim();
                String gioiTinh = cbGioiTinh.getSelectedItem().toString();
                Date ngaySinh = NgaySinhPicker.getDate();
                String diaChi = txt_diachi.getText().trim();
                String dienThoai = txt_sdt.getText().trim();
                String email = txt_email.getText().trim();

                if(isUpdateMode){
                    NhanvienDTO nvCurrent = nhanvienBUS.getNhanvienByMaNV(maNV);

                    if(nvCurrent != null){
                        // Cập nhật nhân viên
                        nvCurrent.setHo_ten(hoTen);
                        nvCurrent.setGioi_tinh(gioiTinh);
                        nvCurrent.setDia_chi(diaChi);
                        nvCurrent.setDien_thoai(dienThoai);
                        nvCurrent.setEmail(email);

                        boolean success = nhanvienBUS.SetNhanVien(nvCurrent);

                        if(success){
                            JOptionPane.showMessageDialog(
                                this,
                                "Cập nhật nhân viên thành công!",
                                "Thông báo",
                                JOptionPane.INFORMATION_MESSAGE);

                            this.dispose();
                        }else{
                            JOptionPane.showMessageDialog(
                                this,
                                "Cập nhật nhân viên thất bại!",
                                "Lỗi",
                                JOptionPane.ERROR_MESSAGE);
                        }
                    }else{
                        JOptionPane.showMessageDialog(
                            this,
                            "Không tìm thấy thông tin nhân viên!",
                            "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    // Tạo đối tượng NhanvienDTO
                    NhanvienDTO nv = new NhanvienDTO();
                    nv.setMa_nhan_vien(maNV);
                    nv.setHo_ten(hoTen);
                    nv.setGioi_tinh(gioiTinh);
                    nv.setNgay_sinh(ngaySinh);
                    nv.setDia_chi(diaChi);
                    nv.setDien_thoai(dienThoai);
                    nv.setEmail(email);
                    nv.setCreated_at(new Date()); // Ngày hiện tại
                    nv.setTrang_thai(1); // Mặc định là hoạt động

                    // Thêm nhân viên thông qua BUS
                    boolean success = nhanvienBUS.AddNhanVien(nv);

                    if (success) {
                        JOptionPane.showMessageDialog(
                            this,
                            "Thêm nhân viên thành công!",
                            "Thông báo",
                            JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(
                            this,
                            "Thêm nhân viên thất bại!",
                            "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        this,
                        "Lỗi: " + e.getMessage(),
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }// GEN-LAST:event_saveBtnActionPerformed

    // Phương thức kiểm tra dữ liệu nhập vào
    private boolean validateInput() {
        // Kiểm tra mã nhân viên
        String maNV = txt_manv.getText().trim();
        if (maNV.isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng nhập mã nhân viên!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            txt_manv.requestFocus();
            return false;
        }

        // Kiểm tra định dạng mã nhân viên (phải có 5 ký tự)
        if (maNV.length() != 5) {
            JOptionPane.showMessageDialog(
                    this,
                    "Mã nhân viên phải có đúng 5 ký tự!",
                    "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            txt_manv.requestFocus();
            return false;
        }

        // Kiểm tra họ tên
        if (txt_tenkh.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng nhập họ tên nhân viên!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            txt_tenkh.requestFocus();
            return false;
        }

        // Kiểm tra ngày sinh
        if (NgaySinhPicker.getDate() == null) {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng chọn ngày sinh!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            NgaySinhPicker.requestFocus();
            return false;
        }

        // Kiểm tra ngày sinh không được lớn hơn thời điểm hiện tại
        Date ngaySinh = NgaySinhPicker.getDate();
        Date hienTai = new Date();
        if (ngaySinh.after(hienTai)) {
            JOptionPane.showMessageDialog(
                    this,
                    "Ngày sinh không được lớn hơn thời điểm hiện tại!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            NgaySinhPicker.requestFocus();
            return false;
        }

        // Kiểm tra số điện thoại
        String sdt = txt_sdt.getText().trim();
        if (sdt.isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Vui lòng nhập số điện thoại!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            txt_sdt.requestFocus();
            return false;
        } else if (!sdt.matches("\\d{10,11}")) {
            JOptionPane.showMessageDialog(
                    this,
                    "Số điện thoại không hợp lệ! Vui lòng nhập 10-11 chữ số.",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            txt_sdt.requestFocus();
            return false;
        }

        // Kiểm tra email
        String email = txt_email.getText().trim();
        if (!email.isEmpty() && !email.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
            JOptionPane.showMessageDialog(
                    this,
                    "Email không hợp lệ!",
                    "Lỗi",
                    JOptionPane.WARNING_MESSAGE);
            txt_email.requestFocus();
            return false;
        }

        return true;
    }

    private void cbGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbGioiTinhActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cbGioiTinhActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpdateNVForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpdateNVForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpdateNVForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpdateNVForm.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpdateNVForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser NgaySinhPicker;
    private javax.swing.JComboBox<String> cbGioiTinh;
    private javax.swing.JPanel information_panel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField txt_diachi;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_manv;
    private javax.swing.JTextField txt_sdt;
    private javax.swing.JTextField txt_tenkh;
    // End of variables declaration//GEN-END:variables
}
