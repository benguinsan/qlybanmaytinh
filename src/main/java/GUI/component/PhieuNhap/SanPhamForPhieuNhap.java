/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.component.PhieuNhap;

import BUS.SanphamBUS;
import DTO.SanphamDTO;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrben
 */
public class SanPhamForPhieuNhap extends javax.swing.JPanel {

    private SanphamBUS sanphamBUS;
    private ArrayList<SanphamDTO> listSanpham;
    private DefaultTableModel tableModel;
    private JDialog parentDialog;
    private JPanel parentComponent;

    /**
     * Creates new form SanPhamForPhieuNhap
     */
    public SanPhamForPhieuNhap() {
        initComponents();
        init();
    }

    /**
     * Creates new form SanPhamForPhieuNhap with parent dialog
     */
    public SanPhamForPhieuNhap(JDialog dialog) {
        this.parentDialog = dialog;
        initComponents();
        init();
    }

    /**
     * Constructor that takes a parent dialog and component
     * 
     * @param parentDialog    The parent dialog
     * @param parentComponent The parent component (should be AddPhieuNhap)
     */
    public SanPhamForPhieuNhap(JDialog parentDialog, JPanel parentComponent) {
        initComponents();
        this.parentDialog = parentDialog;
        this.parentComponent = parentComponent;

        // Initialize the product list
        init();
    }

    private void init() {
        // Initialize the SanphamBUS
        sanphamBUS = new SanphamBUS();

        // Get the table model
        tableModel = (DefaultTableModel) tableSanPham.getModel();

        // Load product data
        loadSanPham();
    }

    private void loadSanPham() {
        // Clear the table
        tableModel.setRowCount(0);

        // Get the product list
        listSanpham = sanphamBUS.getList();

        // Add products to the table
        int stt = 1;
        for (SanphamDTO sp : listSanpham) {
            // Only show active products (if you have a status field)
            if (sp.getTrang_thai() == 1) {
                tableModel.addRow(new Object[] {
                        stt++,
                        sp.getMa_sp(),
                        sp.getTenSP(),
                        sp.getMa_loai(),
                        sp.getChip(),
                        sp.getCard(),
                        sp.getRam(),
                        sp.getSo_luong_ton(),
                        sp.getGia_ban()
                });
            }
        }
    }

    private void searchSanPham() {
        String keyword = txtTimKiem.getText().trim().toLowerCase();

        // If keyword is empty, load all products
        if (keyword.isEmpty()) {
            loadSanPham();
            return;
        }

        // Clear the table
        tableModel.setRowCount(0);

        // Search products
        int stt = 1;
        for (SanphamDTO sp : listSanpham) {
            // Search by product ID, name, or category
            if (sp.getMa_sp().toLowerCase().contains(keyword) ||
                    sp.getTenSP().toLowerCase().contains(keyword) ||
                    sp.getMa_loai().toLowerCase().contains(keyword)) {

                // Only show active products
                if (sp.getTrang_thai() == 1) {
                    tableModel.addRow(new Object[] {
                            stt++,
                            sp.getMa_sp(),
                            sp.getTenSP(),
                            sp.getMa_loai(),
                            sp.getChip(),
                            sp.getCard(),
                            sp.getRam(),
                            sp.getSo_luong_ton(),
                            sp.getGia_ban()
                    });
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        lblSoLuongNhap = new javax.swing.JLabel();
        txtSoLuongNhap = new javax.swing.JTextField();
        lblDonGiaNhap = new javax.swing.JLabel();
        txtDonGiaNhap = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSanPham = new javax.swing.JTable();
        btnChon = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        headerPanel.setBackground(new java.awt.Color(8, 122, 230));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("CHỌN SẢN PHẨM");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(titleLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        headerPanelLayout.setVerticalGroup(
                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(titleLabel)
                                .addGap(15, 15, 15)));

        lblTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTimKiem.setText("Tìm kiếm:");

        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnTimKiem.setBackground(new java.awt.Color(8, 122, 230));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        lblSoLuongNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSoLuongNhap.setText("Số lượng nhập:");

        txtSoLuongNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblDonGiaNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDonGiaNhap.setText("Đơn giá nhập:");

        txtDonGiaNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tableSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableSanPham.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "STT", "Mã SP", "Tên sản phẩm", "Loại", "Chip", "Card", "RAM", "Số lượng", "Giá bán"
                }) {
            Class[] types = new Class[] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class,
                    java.lang.Double.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tableSanPham.setRowHeight(25);
        tableSanPham.setSelectionBackground(new java.awt.Color(8, 122, 230));
        tableSanPham.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableSanPham);

        btnChon.setBackground(new java.awt.Color(8, 122, 230));
        btnChon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnChon.setForeground(new java.awt.Color(255, 255, 255));
        btnChon.setText("Chọn");
        btnChon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(8, 122, 230));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888,
                                                Short.MAX_VALUE)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addGroup(mainPanelLayout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(lblTimKiem)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(txtTimKiem,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 250,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(btnTimKiem))
                                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(lblSoLuongNhap)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(txtSoLuongNhap,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(30, 30, 30)
                                                                .addComponent(lblDonGiaNhap)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(txtDonGiaNhap,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 150,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                mainPanelLayout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap()));
        mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(
                                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblTimKiem)
                                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnTimKiem))
                                .addGap(18, 18, 18)
                                .addGroup(
                                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblSoLuongNhap)
                                                .addComponent(txtSoLuongNhap, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblDonGiaNhap)
                                                .addComponent(txtDonGiaNhap, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(
                                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnChon)
                                                .addComponent(btnHuy))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimKiemActionPerformed
        searchSanPham();
    }// GEN-LAST:event_btnTimKiemActionPerformed

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnChonActionPerformed
        int selectedRow = tableSanPham.getSelectedRow();
        if (selectedRow == -1) {
            // No row selected
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Vui lòng chọn một sản phẩm từ bảng",
                    "Lỗi",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the selected product ID
        String maSP = tableSanPham.getValueAt(selectedRow, 1).toString();
        String tenSP = tableSanPham.getValueAt(selectedRow, 2).toString();

        // Get the quantity and price
        String soLuongText = txtSoLuongNhap.getText().trim();
        String donGiaText = txtDonGiaNhap.getText().trim();

        // Validate inputs
        if (soLuongText.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Vui lòng nhập số lượng nhập",
                    "Lỗi",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            txtSoLuongNhap.requestFocus();
            return;
        }

        if (donGiaText.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Vui lòng nhập đơn giá nhập",
                    "Lỗi",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            txtDonGiaNhap.requestFocus();
            return;
        }

        try {
            int soLuong = Integer.parseInt(soLuongText);
            if (soLuong <= 0) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Số lượng nhập phải lớn hơn 0",
                        "Lỗi",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                txtSoLuongNhap.requestFocus();
                return;
            }

            double donGia = Double.parseDouble(donGiaText);
            if (donGia <= 0) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Đơn giá nhập phải lớn hơn 0",
                        "Lỗi",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                txtDonGiaNhap.requestFocus();
                return;
            }

            // Pass the selected product back to the AddPhieuNhap panel
            if (parentComponent instanceof AddPhieuNhap) {
                AddPhieuNhap addPhieuNhap = (AddPhieuNhap) parentComponent;
                addPhieuNhap.addProductToTable(maSP, tenSP, soLuong, donGia);

                // Add debug message
                System.out.println("Product added: " + maSP + ", " + tenSP + ", " + soLuong + ", " + donGia);
            } else {
                // Add debug message
                System.out.println("parentComponent is not an instance of AddPhieuNhap: " +
                        (parentComponent != null ? parentComponent.getClass().getName() : "null"));
            }

            // Close the dialog
            if (parentDialog != null) {
                parentDialog.dispose();
            } else {
                System.out.println("parentDialog is null");
            }

        } catch (NumberFormatException e) {
            if (e.getMessage().contains(soLuongText)) {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Số lượng nhập phải là số nguyên",
                        "Lỗi",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                txtSoLuongNhap.requestFocus();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                        "Đơn giá nhập phải là số thực",
                        "Lỗi",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                txtDonGiaNhap.requestFocus();
            }
        }
    }// GEN-LAST:event_btnChonActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHuyActionPerformed
        // Close the dialog
        if (parentDialog != null) {
            parentDialog.dispose();
        }
    }// GEN-LAST:event_btnHuyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDonGiaNhap;
    private javax.swing.JLabel lblSoLuongNhap;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable tableSanPham;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField txtDonGiaNhap;
    private javax.swing.JTextField txtSoLuongNhap;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
