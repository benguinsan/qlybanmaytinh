/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.component.PhieuNhap;

import BUS.NhanvienBUS;
import DTO.NhanvienDTO;
import BUS.NhacungcapBUS;
import DTO.NhacungcapDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import BUS.PhieunhapBUS;
import BUS.ChiTietPhieuNhapBUS;
import DTO.PhieunhapDTO;

/**
 *
 * @author mrben
 */
public class AddPhieuNhap extends javax.swing.JPanel {

    private NhanvienBUS nhanvienBUS;
    private NhacungcapBUS nhacungcapBUS;

    /**
     * Creates new form AddPhieuNhap
     */
    public AddPhieuNhap() {
        initComponents();

        nhanvienBUS = new NhanvienBUS();
        nhacungcapBUS = new NhacungcapBUS();

        loadNhanVienData();
        loadNhaCungCapData();

        generateReceiptID();

        dateNgayNhap.setDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        lblMaPhieu = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();
        lblNhanVien = new javax.swing.JLabel();
        cboNhanVien = new javax.swing.JComboBox<>();
        lblNgayNhap = new javax.swing.JLabel();
        dateNgayNhap = new com.toedter.calendar.JDateChooser();
        lblNhaCungCap = new javax.swing.JLabel();
        cboNhaCungCap = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSanPham = new javax.swing.JTable();
        btnThemSanPham = new javax.swing.JButton();
        btnXoaSanPham = new javax.swing.JButton();
        txtTongTien = new javax.swing.JTextField();
        lblTongTien = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        headerPanel.setBackground(new java.awt.Color(8, 122, 230));

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setText("THÊM PHIẾU NHẬP");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(titleLabel)
                                .addContainerGap(493, Short.MAX_VALUE)));
        headerPanelLayout.setVerticalGroup(
                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(headerPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(titleLabel)
                                .addGap(15, 15, 15)));

        infoPanel.setBackground(new java.awt.Color(255, 255, 255));
        infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(8, 122, 230))); // NOI18N

        lblMaPhieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaPhieu.setText("Mã phiếu:");

        txtMaPhieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaPhieu.setEnabled(false);

        lblNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNhanVien.setText("Nhân viên:");

        cboNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNgayNhap.setText("Ngày nhập:");

        dateNgayNhap.setDateFormatString("dd/MM/yyyy");
        dateNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNhaCungCap.setText("Nhà cung cấp:");

        cboNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblMaPhieu)
                                        .addComponent(lblNhanVien))
                                .addGap(18, 18, 18)
                                .addGroup(infoPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMaPhieu, javax.swing.GroupLayout.DEFAULT_SIZE, 200,
                                                Short.MAX_VALUE)
                                        .addComponent(cboNhanVien, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblNgayNhap)
                                        .addComponent(lblNhaCungCap))
                                .addGap(18, 18, 18)
                                .addGroup(infoPanelLayout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboNhaCungCap, 0, 200, Short.MAX_VALUE)
                                        .addComponent(dateNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        infoPanelLayout.setVerticalGroup(
                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(infoPanelLayout
                                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblMaPhieu)
                                                .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblNgayNhap))
                                        .addComponent(dateNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(
                                        infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblNhanVien)
                                                .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblNhaCungCap)
                                                .addComponent(cboNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(15, Short.MAX_VALUE)));

        tableSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableSanPham.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá"
                }) {
            Class[] types = new Class[] {
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class,
                    java.lang.Double.class
            };
            boolean[] canEdit = new boolean[] {
                    false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tableSanPham.setRowHeight(25);
        tableSanPham.setSelectionBackground(new java.awt.Color(8, 122, 230));
        tableSanPham.getTableHeader().setReorderingAllowed(false);
        tableSanPham.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableSanPhamPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tableSanPham);

        btnThemSanPham.setBackground(new java.awt.Color(8, 122, 230));
        btnThemSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSanPham.setText("Thêm sản phẩm");
        btnThemSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });

        btnXoaSanPham.setBackground(new java.awt.Color(8, 122, 230));
        btnXoaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoaSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaSanPham.setText("Xóa sản phẩm");
        btnXoaSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSanPhamActionPerformed(evt);
            }
        });

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTongTien.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTongTien.setText("0");

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongTien.setText("Tổng tiền:");

        btnLuu.setBackground(new java.awt.Color(8, 122, 230));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setText("Lưu");
        btnLuu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnHuy.setBackground(new java.awt.Color(8, 122, 230));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addComponent(infoPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addComponent(btnThemSanPham)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnXoaSanPham)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblTongTien)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                mainPanelLayout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap()));
        mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(
                                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnThemSanPham)
                                                .addComponent(btnXoaSanPham)
                                                .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblTongTien))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(
                                        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnLuu)
                                                .addComponent(btnHuy))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents

    private void tableSanPhamPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_tableSanPhamPropertyChange
        // TODO add your handling code here:
    }// GEN-LAST:event_tableSanPhamPropertyChange

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {
        // Create a dialog to show the SanPhamForPhieuNhap panel
        JDialog dialog = new JDialog();
        dialog.setTitle("Chọn sản phẩm");
        dialog.setModal(true);
        dialog.setSize(900, 600);
        dialog.setLocationRelativeTo(this);

        // Create the SanPhamForPhieuNhap panel and pass the dialog and this panel
        SanPhamForPhieuNhap sanPhamPanel = new SanPhamForPhieuNhap(dialog, this);
        dialog.setContentPane(sanPhamPanel);

        // Show the dialog
        dialog.setVisible(true);
    }

    private void btnXoaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnXoaSanPhamActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnXoaSanPhamActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {
        // Validate inputs
        if (txtMaPhieu.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã phiếu nhập", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtMaPhieu.requestFocus();
            return;
        }

        if (cboNhanVien.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            cboNhanVien.requestFocus();
            return;
        }

        if (cboNhaCungCap.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà cung cấp", "Lỗi", JOptionPane.ERROR_MESSAGE);
            cboNhaCungCap.requestFocus();
            return;
        }

        if (dateNgayNhap.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày nhập", "Lỗi", JOptionPane.ERROR_MESSAGE);
            dateNgayNhap.requestFocus();
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng thêm ít nhất một sản phẩm", "Lỗi", JOptionPane.ERROR_MESSAGE);
            btnThemSanPham.requestFocus();
            return;
        }

        try {
            // Lấy thông tin phiếu nhập
            String maPhieu = txtMaPhieu.getText().trim();
            String maNV = cboNhanVien.getSelectedItem().toString().split(" - ")[0];
            String maNCC = cboNhaCungCap.getSelectedItem().toString().split(" - ")[0];
            Date ngayNhap = dateNgayNhap.getDate();

            // Tính tổng tiền
            double tongTien = 0;
            for (int i = 0; i < model.getRowCount(); i++) {
                int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
                double donGia = Double.parseDouble(model.getValueAt(i, 4).toString());
                tongTien += soLuong * donGia;
            }

            // Initialize BUS objects
            PhieunhapBUS phieunhapBUS = new PhieunhapBUS();
            ChiTietPhieuNhapBUS ctpnBUS = new ChiTietPhieuNhapBUS();

            // QUAN TRỌNG: Thêm phiếu nhập trước
            boolean headerSuccess = phieunhapBUS.addPhieuNhap(maPhieu, maNV, maNCC, ngayNhap, tongTien);

            if (!headerSuccess) {
                JOptionPane.showMessageDialog(this, "Lỗi khi lưu phiếu nhập", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Sau đó thêm chi tiết phiếu nhập
            boolean allDetailsSuccess = true;
            for (int i = 0; i < model.getRowCount(); i++) {
                String maSP = model.getValueAt(i, 1).toString();
                int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
                double donGia = Double.parseDouble(model.getValueAt(i, 4).toString());

                boolean detailSuccess = ctpnBUS.addChiTietPhieuNhap(maPhieu, maSP, soLuong, donGia);

                if (!detailSuccess) {
                    allDetailsSuccess = false;
                    System.out.println("Lỗi khi thêm chi tiết phiếu nhập: " + maPhieu + ", " + maSP);
                    break;
                }
            }

            if (!allDetailsSuccess) {
                // Nếu có lỗi khi thêm chi tiết, xóa phiếu nhập đã thêm
                phieunhapBUS.deletePhieuNhap(maPhieu);
                JOptionPane.showMessageDialog(this, "Lỗi khi lưu chi tiết phiếu nhập", "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Success
            JOptionPane.showMessageDialog(this, "Lưu phiếu nhập thành công", "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);

            // Clear the form or close it
            clearForm();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    /**
     * Clears the form and resets it for a new receipt
     */
    private void clearForm() {
        // Generate a new receipt ID
        generateReceiptID();

        // Reset other fields
        cboNhanVien.setSelectedIndex(0);
        cboNhaCungCap.setSelectedIndex(0);
        dateNgayNhap.setDate(new Date());

        // Clear the product table
        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
        model.setRowCount(0);

        // Reset total
        txtTongTien.setText("0");
    }

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnHuyActionPerformed

    private void loadNhanVienData() {
        ArrayList<NhanvienDTO> listNhanVien = nhanvienBUS.getList();

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        model.addElement("-- Chọn nhân viên --");

        for (NhanvienDTO nv : listNhanVien) {
            model.addElement(nv.getMa_nhan_vien() + " - " + nv.getHo_ten());
        }

        cboNhanVien.setModel(model);
    }

    private void loadNhaCungCapData() {
        List<NhacungcapDTO> listNhaCungCap = nhacungcapBUS.getAllNhacungcap();

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        model.addElement("-- Chọn nhà cung cấp --");

        for (NhacungcapDTO ncc : listNhaCungCap) {
            model.addElement(ncc.getMa_ncc() + " - " + ncc.getTen_ncc());
        }

        cboNhaCungCap.setModel(model);
    }

    /**
     * Generates a unique receipt ID and sets it to the txtMaPhieu field
     */
    private void generateReceiptID() {
        // Format: PN + current date (yyyyMMdd) + random 3-digit number
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
        String dateStr = dateFormat.format(new Date());

        // Generate random 3-digit number
        Random random = new Random();
        int randomNum = random.nextInt(900) + 100; // Generates a number between 100 and 999

        // Combine to create receipt ID
        String receiptID = "PN" + dateStr + randomNum;

        // Set the generated ID to the text field
        txtMaPhieu.setText(receiptID);
    }

    /**
     * Adds a product to the table of products in the receipt
     * 
     * @param maSP    The product ID
     * @param tenSP   The product name
     * @param soLuong The quantity
     * @param donGia  The price
     */
    public void addProductToTable(String maSP, String tenSP, int soLuong, double donGia) {
        // Check if the product already exists in the table
        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
        boolean productExists = false;
        int existingRow = -1;

        for (int i = 0; i < model.getRowCount(); i++) {
            String currentMaSP = model.getValueAt(i, 1).toString();
            if (currentMaSP.equals(maSP)) {
                productExists = true;
                existingRow = i;
                break;
            }
        }

        if (productExists) {
            // Update the existing row
            int currentSoLuong = Integer.parseInt(model.getValueAt(existingRow, 3).toString());
            double currentDonGia = Double.parseDouble(model.getValueAt(existingRow, 4).toString());

            // Ask user if they want to update or add to the quantity
            int option = JOptionPane.showConfirmDialog(
                    this,
                    "Sản phẩm này đã tồn tại trong phiếu nhập. Bạn muốn cập nhật thông tin không?",
                    "Sản phẩm đã tồn tại",
                    JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) {
                // Update the quantity and price
                model.setValueAt(soLuong, existingRow, 3);
                model.setValueAt(donGia, existingRow, 4);
            } else {
                // Add to the existing quantity
                int newSoLuong = currentSoLuong + soLuong;
                model.setValueAt(newSoLuong, existingRow, 3);

                // If the price is different, ask which one to use
                if (currentDonGia != donGia) {
                    Object[] options = { "Giá cũ (" + currentDonGia + ")", "Giá mới (" + donGia + ")" };
                    int priceOption = JOptionPane.showOptionDialog(
                            this,
                            "Giá nhập khác với giá đã có. Bạn muốn sử dụng giá nào?",
                            "Chọn giá nhập",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            options,
                            options[0]);

                    if (priceOption == 1) {
                        // Use the new price
                        model.setValueAt(donGia, existingRow, 4);
                    }
                }
            }
        } else {
            // Add a new row
            int stt = model.getRowCount() + 1;

            model.addRow(new Object[] {
                    stt,
                    maSP,
                    tenSP,
                    soLuong,
                    donGia
            });
        }

        // Update the total amount
        updateTongTien();
    }

    /**
     * Updates the total amount of the receipt
     */
    private void updateTongTien() {
        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
        double tongTien = 0;

        for (int i = 0; i < model.getRowCount(); i++) {
            int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
            double donGia = Double.parseDouble(model.getValueAt(i, 4).toString());
            tongTien += soLuong * donGia;
        }

        txtTongTien.setText(String.format("%.0f", tongTien));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThemSanPham;
    private javax.swing.JButton btnXoaSanPham;
    private javax.swing.JComboBox<String> cboNhaCungCap;
    private javax.swing.JComboBox<String> cboNhanVien;
    private com.toedter.calendar.JDateChooser dateNgayNhap;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMaPhieu;
    private javax.swing.JLabel lblNgayNhap;
    private javax.swing.JLabel lblNhaCungCap;
    private javax.swing.JLabel lblNhanVien;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable tableSanPham;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
