/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.component.HoaDon;

import GUI.component.HoaDon.SanPhamForHoaDon;
import javax.swing.JDialog;
import BUS.NhanvienBUS;
import DTO.NhanvienDTO;
import BUS.KhachhangBUS;
import DTO.KhachhangDTO;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrben
 */
public class AddHoaDon extends javax.swing.JPanel {

        private NhanvienBUS nhanvienBUS;
        private KhachhangBUS khachhangBUS;

        /**
         * Creates new form AddHoaDon
         */
        public AddHoaDon() {
                initComponents();

                nhanvienBUS = new NhanvienBUS();
                khachhangBUS = new KhachhangBUS();

                loadNhanVienData();
                loadKhachHangData();

                generateInvoiceID();

                dateNgayLap.setDate(new Date());
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                mainPanel = new javax.swing.JPanel();
                headerPanel = new javax.swing.JPanel();
                titleLabel = new javax.swing.JLabel();
                infoPanel = new javax.swing.JPanel();
                lblMaHoaDon = new javax.swing.JLabel();
                txtMaHoaDon = new javax.swing.JTextField();
                lblNhanVien = new javax.swing.JLabel();
                cboNhanVien = new javax.swing.JComboBox<>();
                lblNgayLap = new javax.swing.JLabel();
                dateNgayLap = new com.toedter.calendar.JDateChooser();
                lblKhachHang = new javax.swing.JLabel();
                cboKhachHang = new javax.swing.JComboBox<>();
                jScrollPane1 = new javax.swing.JScrollPane();
                tableSanPham = new javax.swing.JTable();
                btnThemSanPham = new javax.swing.JButton();
                btnXoaSanPham = new javax.swing.JButton();
                txtTongTien = new javax.swing.JTextField();
                lblTongTien = new javax.swing.JLabel();
                btnLuu = new javax.swing.JButton();
                btnHuy = new javax.swing.JButton();

                mainPanel.setBackground(new java.awt.Color(255, 255, 255));

                headerPanel.setBackground(new java.awt.Color(8, 122, 230));

                titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
                titleLabel.setForeground(new java.awt.Color(255, 255, 255));
                titleLabel.setText("THÊM HÓA ĐƠN");

                javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
                headerPanel.setLayout(headerPanelLayout);
                headerPanelLayout.setHorizontalGroup(
                                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(headerPanelLayout.createSequentialGroup()
                                                                .addGap(15, 15, 15)
                                                                .addComponent(titleLabel)
                                                                .addContainerGap(496, Short.MAX_VALUE)));
                headerPanelLayout.setVerticalGroup(
                                headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(headerPanelLayout.createSequentialGroup()
                                                                .addGap(15, 15, 15)
                                                                .addComponent(titleLabel)
                                                                .addGap(15, 15, 15)));

                infoPanel.setBackground(new java.awt.Color(255, 255, 255));
                infoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn",
                                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                                new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(8, 122, 230))); // NOI18N

                lblMaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                lblMaHoaDon.setText("Mã hóa đơn:");

                txtMaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                txtMaHoaDon.setEnabled(false);

                lblNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                lblNhanVien.setText("Nhân viên:");

                cboNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

                lblNgayLap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                lblNgayLap.setText("Ngày lập:");

                dateNgayLap.setDateFormatString("dd/MM/yyyy");
                dateNgayLap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

                lblKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                lblKhachHang.setText("Khách hàng:");

                cboKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

                javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
                infoPanel.setLayout(infoPanelLayout);
                infoPanelLayout.setHorizontalGroup(
                                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(infoPanelLayout.createSequentialGroup()
                                                                .addGap(20, 20, 20)
                                                                .addGroup(infoPanelLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(lblMaHoaDon)
                                                                                .addComponent(lblNhanVien))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(infoPanelLayout
                                                                                .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                false)
                                                                                .addComponent(txtMaHoaDon,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                200,
                                                                                                Short.MAX_VALUE)
                                                                                .addComponent(cboNhanVien, 0,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                Short.MAX_VALUE))
                                                                .addGap(50, 50, 50)
                                                                .addGroup(infoPanelLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(lblNgayLap)
                                                                                .addComponent(lblKhachHang))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(infoPanelLayout
                                                                                .createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                                false)
                                                                                .addComponent(cboKhachHang, 0, 200,
                                                                                                Short.MAX_VALUE)
                                                                                .addComponent(dateNgayLap,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                Short.MAX_VALUE))
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)));
                infoPanelLayout.setVerticalGroup(
                                infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(infoPanelLayout.createSequentialGroup()
                                                                .addGap(15, 15, 15)
                                                                .addGroup(infoPanelLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(infoPanelLayout
                                                                                                .createParallelGroup(
                                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(lblMaHoaDon)
                                                                                                .addComponent(txtMaHoaDon,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(lblNgayLap))
                                                                                .addComponent(dateNgayLap,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(15, 15, 15)
                                                                .addGroup(
                                                                                infoPanelLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(lblNhanVien)
                                                                                                .addComponent(cboNhanVien,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(lblKhachHang)
                                                                                                .addComponent(cboKhachHang,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addContainerGap(15, Short.MAX_VALUE)));

                tableSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                tableSanPham.setModel(new javax.swing.table.DefaultTableModel(
                                new Object[][] {

                                },
                                new String[] {
                                                "STT", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá"
                                }) {
                        Class[] types = new Class[] {
                                        java.lang.Integer.class, java.lang.String.class, java.lang.String.class,
                                        java.lang.Integer.class,
                                        java.lang.Double.class
                        };
                        boolean[] canEdit = new boolean[] {
                                        false, false, false, true, true
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types[columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit[columnIndex];
                        }
                });
                tableSanPham.setRowHeight(25);
                tableSanPham.setSelectionBackground(new java.awt.Color(8, 122, 230));
                tableSanPham.getTableHeader().setReorderingAllowed(false);
                tableSanPham.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                tableSanPhamPropertyChange(evt);
                        }
                });
                jScrollPane1.setViewportView(tableSanPham);

                btnThemSanPham.setBackground(new java.awt.Color(8, 122, 230));
                btnThemSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnThemSanPham.setForeground(new java.awt.Color(255, 255, 255));
                btnThemSanPham.setText("Thêm sản phẩm");
                btnThemSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnThemSanPhamActionPerformed(evt);
                        }
                });

                btnXoaSanPham.setBackground(new java.awt.Color(8, 122, 230));
                btnXoaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnXoaSanPham.setForeground(new java.awt.Color(255, 255, 255));
                btnXoaSanPham.setText("Xóa sản phẩm");
                btnXoaSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                btnXoaSanPham.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnXoaSanPhamActionPerformed(evt);
                        }
                });

                txtTongTien.setEditable(false);
                txtTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                txtTongTien.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
                txtTongTien.setText("0");

                lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                lblTongTien.setText("Tổng tiền:");

                btnLuu.setBackground(new java.awt.Color(8, 122, 230));
                btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnLuu.setForeground(new java.awt.Color(255, 255, 255));
                btnLuu.setText("Lưu");
                btnLuu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                btnLuu.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnLuuActionPerformed(evt);
                        }
                });

                btnHuy.setBackground(new java.awt.Color(8, 122, 230));
                btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                btnHuy.setForeground(new java.awt.Color(255, 255, 255));
                btnHuy.setText("Hủy");
                btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                btnHuy.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnHuyActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
                mainPanel.setLayout(mainPanelLayout);
                mainPanelLayout.setHorizontalGroup(
                                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addGroup(mainPanelLayout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(jScrollPane1)
                                                                                .addComponent(infoPanel,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                Short.MAX_VALUE)
                                                                                .addGroup(mainPanelLayout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(btnThemSanPham)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(btnXoaSanPham)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE)
                                                                                                .addComponent(lblTongTien)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(txtTongTien,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                150,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                                mainPanelLayout.createSequentialGroup()
                                                                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                                                                .addComponent(btnHuy,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                100,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                                .addGap(18, 18, 18)
                                                                                                                .addComponent(btnLuu,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                100,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addContainerGap()));
                mainPanelLayout.setVerticalGroup(
                                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(mainPanelLayout.createSequentialGroup()
                                                                .addComponent(headerPanel,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(infoPanel,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(
                                                                                mainPanelLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(btnThemSanPham)
                                                                                                .addComponent(btnXoaSanPham)
                                                                                                .addComponent(txtTongTien,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                                .addComponent(lblTongTien))
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jScrollPane1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                250,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addGroup(
                                                                                mainPanelLayout.createParallelGroup(
                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                .addComponent(btnLuu)
                                                                                                .addComponent(btnHuy))
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)));

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
                layout.setVerticalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        }// </editor-fold>//GEN-END:initComponents

        private void tableSanPhamPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_tableSanPhamPropertyChange
                // TODO add your handling code here:
        }// GEN-LAST:event_tableSanPhamPropertyChange

        private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemSanPhamActionPerformed
                // Create a dialog to display the SanPhamForHoaDon panel
                JDialog dialog = new JDialog();
                dialog.setTitle("Chọn sản phẩm");
                dialog.setModal(true);

                // Create the SanPhamForHoaDon panel with references to the dialog and this
                // panel
                SanPhamForHoaDon sanPhamPanel = new SanPhamForHoaDon(dialog, this);

                // Set the panel as the content of the dialog
                dialog.setContentPane(sanPhamPanel);
                dialog.pack();
                dialog.setLocationRelativeTo(this);

                // Show the dialog
                dialog.setVisible(true);
        }// GEN-LAST:event_btnThemSanPhamActionPerformed

        private void btnXoaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnXoaSanPhamActionPerformed
                int selectedRow = tableSanPham.getSelectedRow();
                if (selectedRow == -1) {
                        JOptionPane.showMessageDialog(this,
                                        "Vui lòng chọn sản phẩm cần xóa",
                                        "Thông báo",
                                        JOptionPane.WARNING_MESSAGE);
                        return;
                }

                // Confirm deletion
                int option = JOptionPane.showConfirmDialog(this,
                                "Bạn có chắc chắn muốn xóa sản phẩm này khỏi hóa đơn?",
                                "Xác nhận xóa",
                                JOptionPane.YES_NO_OPTION);

                if (option == JOptionPane.YES_OPTION) {
                        // Remove the selected row
                        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
                        model.removeRow(selectedRow);

                        // Update STT for remaining rows
                        for (int i = 0; i < model.getRowCount(); i++) {
                                model.setValueAt(i + 1, i, 0);
                        }

                        // Update total amount
                        updateTongTien();
                }
        }// GEN-LAST:event_btnXoaSanPhamActionPerformed

        private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLuuActionPerformed
                try {
                        // Get invoice data
                        String maHoaDon = txtMaHoaDon.getText().trim();
                        String selectedNhanVien = cboNhanVien.getSelectedItem().toString();
                        String maNV = selectedNhanVien.split(" - ")[0];
                        String selectedKhachHang = cboKhachHang.getSelectedItem().toString();
                        String maKH = selectedKhachHang.split(" - ")[0];
                        Date ngayLap = dateNgayLap.getDate();

                        // Validate data
                        if (maHoaDon.isEmpty() || maNV.isEmpty() || maKH.isEmpty() || ngayLap == null) {
                                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin hóa đơn", "Lỗi",
                                                JOptionPane.ERROR_MESSAGE);
                                return;
                        }

                        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
                        if (model.getRowCount() == 0) {
                                JOptionPane.showMessageDialog(this, "Vui lòng thêm ít nhất một sản phẩm vào hóa đơn",
                                                "Lỗi", JOptionPane.ERROR_MESSAGE);
                                return;
                        }

                        // Format date for database
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                        String ngayLapStr = sdf.format(ngayLap);

                        // Calculate total amount
                        float tongTien = Float.parseFloat(txtTongTien.getText().replace(",", ""));

                        // Step 1: Create and save the invoice first
                        BUS.HoaDonBUS hoaDonBUS = new BUS.HoaDonBUS();
                        boolean invoiceSuccess = hoaDonBUS.addHoaDon(maHoaDon, maNV, maKH, ngayLapStr, tongTien);

                        if (!invoiceSuccess) {
                                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thất bại", "Lỗi",
                                                JOptionPane.ERROR_MESSAGE);
                                return;
                        }

                        // Step 2: After invoice is created successfully, add invoice details
                        BUS.ChiTietHoaDonBUS chiTietHoaDonBUS = new BUS.ChiTietHoaDonBUS();
                        boolean allDetailsSuccess = true;

                        for (int i = 0; i < model.getRowCount(); i++) {
                                String maSP = model.getValueAt(i, 1).toString();
                                int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
                                float donGia = Float.parseFloat(model.getValueAt(i, 4).toString());

                                try {
                                        // Make sure to use the exact same maHoaDon format as stored in the database
                                        boolean detailSuccess = chiTietHoaDonBUS.addChiTietHoaDon(
                                                        maHoaDon, // Use the exact same ID that was used to create the
                                                                  // invoice
                                                        maSP,
                                                        soLuong,
                                                        donGia);

                                        if (!detailSuccess) {
                                                JOptionPane.showMessageDialog(this,
                                                                "Thêm chi tiết hóa đơn thất bại cho sản phẩm: " + maSP,
                                                                "Lỗi",
                                                                JOptionPane.ERROR_MESSAGE);
                                                allDetailsSuccess = false;
                                                break;
                                        }
                                } catch (Exception e) {
                                        JOptionPane.showMessageDialog(this,
                                                        "Lỗi: " + e.getMessage(),
                                                        "Lỗi",
                                                        JOptionPane.ERROR_MESSAGE);
                                        allDetailsSuccess = false;
                                        break;
                                }
                        }

                        if (allDetailsSuccess) {
                                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thành công", "Thông báo",
                                                JOptionPane.INFORMATION_MESSAGE);
                                // Clear form or close dialog
                                clearForm();
                        } else {
                                // If adding details failed, we should delete the invoice to maintain data
                                // integrity
                                hoaDonBUS.deleteHoaDon(maHoaDon);
                                JOptionPane.showMessageDialog(this, "Thêm hóa đơn thất bại", "Lỗi",
                                                JOptionPane.ERROR_MESSAGE);
                        }
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this,
                                        "Lỗi: " + e.getMessage(),
                                        "Lỗi",
                                        JOptionPane.ERROR_MESSAGE);
                        e.printStackTrace();
                }
        }// GEN-LAST:event_btnLuuActionPerformed

        private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnHuyActionPerformed
                int option = JOptionPane.showConfirmDialog(this,
                                "Bạn có chắc chắn muốn hủy hóa đơn này?",
                                "Xác nhận hủy",
                                JOptionPane.YES_NO_OPTION);

                if (option == JOptionPane.YES_OPTION) {
                        clearForm();
                }
        }// GEN-LAST:event_btnHuyActionPerformed

        /**
         * Clears the form for a new invoice
         */
        private void clearForm() {
                // Generate a new invoice ID
                generateInvoiceID();

                // Reset date to current date
                dateNgayLap.setDate(new Date());

                // Clear product table
                DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
                model.setRowCount(0);

                // Reset total amount
                txtTongTien.setText("0");
        }

        /**
         * Loads employee data into the employee combobox
         */
        private void loadNhanVienData() {
                ArrayList<NhanvienDTO> listNhanVien = nhanvienBUS.getList();

                DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

                model.addElement("-- Chọn nhân viên --");

                for (NhanvienDTO nv : listNhanVien) {
                        model.addElement(nv.getMa_nhan_vien() + " - " + nv.getHo_ten());
                }

                cboNhanVien.setModel(model);
        }

        /**
         * Loads customer data into the customer combobox
         */
        private void loadKhachHangData() {
                ArrayList<KhachhangDTO> listKhachHang = khachhangBUS.getList();

                DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

                model.addElement("-- Chọn khách hàng --");

                for (KhachhangDTO kh : listKhachHang) {
                        model.addElement(kh.getMa_khach_hang() + " - " + kh.getHo_ten());
                }

                cboKhachHang.setModel(model);
        }

        /**
         * Generates a unique invoice ID and sets it to the txtMaHoaDon field
         */
        private void generateInvoiceID() {
                // Format: HD + current date (yyyyMMdd) + random 3-digit number
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
                String dateStr = dateFormat.format(new Date());

                // Generate random 3-digit number
                Random random = new Random();
                int randomNum = random.nextInt(900) + 100; // Generates a number between 100 and 999

                // Combine to create invoice ID
                String invoiceID = "HD" + dateStr + randomNum;

                // Set the generated ID to the text field
                txtMaHoaDon.setText(invoiceID);
        }

        /**
         * Adds a product to the table of products in the invoice
         * 
         * @param maSP    The product ID
         * @param tenSP   The product name
         * @param soLuong The quantity
         * @param donGia  The price
         */
        public void addProductToTable(String maSP, String tenSP, int soLuong, double donGia) {
                try {
                        // Check inventory before adding to table
                        BUS.SanphamBUS sanphamBUS = new BUS.SanphamBUS();
                        DTO.SanphamDTO sanPham = sanphamBUS.getSanphamById(maSP);

                        if (sanPham == null) {
                                JOptionPane.showMessageDialog(this,
                                                "Không tìm thấy sản phẩm với mã: " + maSP,
                                                "Lỗi",
                                                JOptionPane.ERROR_MESSAGE);
                                return;
                        }

                        // Kiểm tra nếu sản phẩm hết hàng
                        if (sanPham.getSo_luong_ton() <= 0) {
                                JOptionPane.showMessageDialog(this,
                                                "Sản phẩm " + tenSP + " đã hết hàng!",
                                                "Thông báo hết hàng",
                                                JOptionPane.WARNING_MESSAGE);
                                return;
                        }

                        // Kiểm tra nếu số lượng yêu cầu lớn hơn số lượng tồn kho
                        if (sanPham.getSo_luong_ton() < soLuong) {
                                JOptionPane.showMessageDialog(this,
                                                "Sản phẩm " + tenSP + " chỉ còn " + sanPham.getSo_luong_ton()
                                                                + " sản phẩm trong kho!",
                                                "Thông báo thiếu hàng",
                                                JOptionPane.WARNING_MESSAGE);
                                return;
                        }

                        // Continue with existing code to add product to table
                        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
                        boolean productExists = false;
                        int existingRow = -1;

                        for (int i = 0; i < model.getRowCount(); i++) {
                                String currentMaSP = model.getValueAt(i, 1).toString();
                                if (currentMaSP.equals(maSP)) {
                                        productExists = true;
                                        existingRow = i;
                                        break;
                                }
                        }

                        if (productExists) {
                                // Update the existing row
                                int currentSoLuong = Integer.parseInt(model.getValueAt(existingRow, 3).toString());

                                // Ask user if they want to update or add to the quantity
                                int option = JOptionPane.showConfirmDialog(
                                                this,
                                                "Sản phẩm này đã tồn tại trong hóa đơn. Bạn muốn cập nhật số lượng không?",
                                                "Sản phẩm đã tồn tại",
                                                JOptionPane.YES_NO_OPTION);

                                if (option == JOptionPane.YES_OPTION) {
                                        // Update the quantity
                                        model.setValueAt(soLuong, existingRow, 3);
                                } else {
                                        // Add to the existing quantity
                                        int newSoLuong = currentSoLuong + soLuong;
                                        model.setValueAt(newSoLuong, existingRow, 3);
                                }
                        } else {
                                // Add a new row
                                int stt = model.getRowCount() + 1;

                                model.addRow(new Object[] {
                                                stt,
                                                maSP,
                                                tenSP,
                                                soLuong,
                                                donGia
                                });
                        }

                        // Update the total amount
                        updateTongTien();
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this,
                                        "Lỗi: " + e.getMessage(),
                                        "Lỗi",
                                        JOptionPane.ERROR_MESSAGE);
                }
        }

        /**
         * Updates the total amount of the invoice
         */
        private void updateTongTien() {
                DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
                double tongTien = 0;

                for (int i = 0; i < model.getRowCount(); i++) {
                        int soLuong = Integer.parseInt(model.getValueAt(i, 3).toString());
                        double donGia = Double.parseDouble(model.getValueAt(i, 4).toString());
                        tongTien += soLuong * donGia;
                }

                txtTongTien.setText(String.format("%.0f", tongTien));
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnHuy;
        private javax.swing.JButton btnLuu;
        private javax.swing.JButton btnThemSanPham;
        private javax.swing.JButton btnXoaSanPham;
        private javax.swing.JComboBox<String> cboKhachHang;
        private javax.swing.JComboBox<String> cboNhanVien;
        private com.toedter.calendar.JDateChooser dateNgayLap;
        private javax.swing.JPanel headerPanel;
        private javax.swing.JPanel infoPanel;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel lblKhachHang;
        private javax.swing.JLabel lblMaHoaDon;
        private javax.swing.JLabel lblNgayLap;
        private javax.swing.JLabel lblNhanVien;
        private javax.swing.JLabel lblTongTien;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JTable tableSanPham;
        private javax.swing.JLabel titleLabel;
        private javax.swing.JTextField txtMaHoaDon;
        private javax.swing.JTextField txtTongTien;
        // End of variables declaration//GEN-END:variables
}
