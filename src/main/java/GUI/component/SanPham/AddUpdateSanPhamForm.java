/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.component.SanPham;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import DTO.SanphamDTO;
import DTO.ChiTietSanPhamDTO;
import BUS.SanphamBUS;
import BUS.ChiTietSanPhamBUS;
import BUS.LoaisanphamBUS;
import DTO.LoaisanphamDTO;
import java.math.RoundingMode;
import java.text.DecimalFormat;
/**
 *
 * @author ADMIN
 */
public class AddUpdateSanPhamForm extends javax.swing.JFrame {
    SanphamBUS sanPhamBUS;
    ChiTietSanPhamBUS chiTietSanPhamBUS;

    LoaisanphamBUS loaiBUS;
    private ArrayList<LoaisanphamDTO> dsLoai;
    
    public boolean isUpdateMode = false;
    private String maSanPhamForUpdate = null;

    /**
     * Creates new form AddUpdateSanPhamForm
     */
    public AddUpdateSanPhamForm() {
        initComponents();
        sanPhamBUS = new SanphamBUS();
        chiTietSanPhamBUS = new ChiTietSanPhamBUS();
        loaiBUS = new LoaisanphamBUS();
        
         dsLoai = loaiBUS.getList(); // üí• D√≤ng n√†y r·∫•t quan tr·ªçng

     // ƒê·ªï s·∫µn c√°c lo·∫°i s·∫£n ph·∫©m v√†o combobox
        if (dsLoai != null) {
            for (LoaisanphamDTO loai : dsLoai) {
               cbLoaiSP.addItem(loai.getTen_loai());
           }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        information_panel = new javax.swing.JPanel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtRAM = new javax.swing.JTextField();
        txtCPU = new javax.swing.JTextField();
        txtGia = new javax.swing.JTextField();
        cbLoaiSP = new javax.swing.JComboBox<>();
        txtCard = new javax.swing.JTextField();
        saveBtn5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        information_panel.setBackground(new java.awt.Color(255, 255, 255));
        information_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Th√™m s·∫£n ph·∫©m m·ªõi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtMaSP.setBorder(javax.swing.BorderFactory.createTitledBorder("M√£ s·∫£n ph·∫©m"));
        txtMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSPActionPerformed(evt);
            }
        });

        txtTenSP.setBorder(javax.swing.BorderFactory.createTitledBorder("T√™n s·∫£n ph·∫©m"));

        txtRAM.setBorder(javax.swing.BorderFactory.createTitledBorder("RAM"));

        txtCPU.setBorder(javax.swing.BorderFactory.createTitledBorder("CPU"));

        txtGia.setBorder(javax.swing.BorderFactory.createTitledBorder("Gi√° b√°n"));
        txtGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiaActionPerformed(evt);
            }
        });

        cbLoaiSP.setBorder(javax.swing.BorderFactory.createTitledBorder("Lo·∫°i s·∫£n ph·∫©m"));

        txtCard.setBorder(javax.swing.BorderFactory.createTitledBorder("Card "));

        javax.swing.GroupLayout information_panelLayout = new javax.swing.GroupLayout(information_panel);
        information_panel.setLayout(information_panelLayout);
        information_panelLayout.setHorizontalGroup(
            information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(information_panelLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCard)
                    .addComponent(txtMaSP)
                    .addComponent(txtTenSP)
                    .addComponent(cbLoaiSP, 0, 250, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addGroup(information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCPU)
                    .addComponent(txtRAM)
                    .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        information_panelLayout.setVerticalGroup(
            information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(information_panelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaSP)
                    .addComponent(txtRAM))
                .addGap(27, 27, 27)
                .addGroup(information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTenSP)
                    .addComponent(txtCPU))
                .addGap(28, 28, 28)
                .addGroup(information_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGia)
                    .addComponent(cbLoaiSP))
                .addGap(30, 30, 30)
                .addComponent(txtCard)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        saveBtn5.setBackground(new java.awt.Color(0, 204, 51));
        saveBtn5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveBtn5.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn5.setText("SAVE");
        saveBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtn5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(information_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 331, Short.MAX_VALUE)
                .addComponent(saveBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(330, 330, 330))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(information_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        information_panel.getAccessibleContext().setAccessibleName("information");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtn5ActionPerformed
        // TODO add your handling code here:
            if (validateInput()) {
            try {
                // L·∫•y d·ªØ li·ªáu t·ª´ form
                String maSP = txtMaSP.getText().trim();
                String tenSP = txtTenSP.getText().trim();
                String ram = txtRAM.getText().trim();
                String cpu = txtCPU.getText().trim();
                String card = txtCard.getText().trim();
                double donGia = Double.parseDouble(txtGia.getText().trim());
                String tenLoai = cbLoaiSP.getSelectedItem().toString();
        
                // T√¨m m√£ lo·∫°i s·∫£n ph·∫©m theo t√™n lo·∫°i
                String maLoai = null;
                for (LoaisanphamDTO loai : dsLoai) {
                    if (loai.getTen_loai().equals(tenLoai)) {
                        maLoai = loai.getMa_loai();
                        break;
                    }
                }
                if (maLoai == null) {
                    JOptionPane.showMessageDialog(this, "Kh√¥ng t√¨m ƒë∆∞·ª£c m√£ lo·∫°i s·∫£n ph·∫©m!", "L·ªói", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            
                if (isUpdateMode) {
                    // C·∫≠p nh·∫≠t s·∫£n ph·∫©m
                    SanphamDTO sp = sanPhamBUS.getSanphamByMaSP(maSP);
                    ChiTietSanPhamDTO ctsp = chiTietSanPhamBUS.getCTSPByMaSP(maSP);
                
                    if (sp != null && ctsp != null) {
                        sp.setTenSP(tenSP);
                        sp.setDonGia(donGia);
                        sp.setMa_loai(maLoai);
                    
                        ctsp.setRam(ram);
                        ctsp.setChip(cpu);
                        ctsp.setCard(card);
                        ctsp.setGia_ban(donGia);
                    
                        boolean spSuccess = sanPhamBUS.SetSanpham(sp);
                        boolean ctspSuccess = chiTietSanPhamBUS.SetChiTietSanpham(ctsp);
                    
                        if (spSuccess && ctspSuccess) {
                            JOptionPane.showMessageDialog(
                                    this,
                                    "C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!",
                                    "Th√¥ng b√°o",
                                    JOptionPane.INFORMATION_MESSAGE);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(
                                    this,
                                    "C·∫≠p nh·∫≠t s·∫£n ph·∫©m th·∫•t b·∫°i!",
                                    "L·ªói",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(
                                this,
                                "Kh√¥ng t√¨m th·∫•y th√¥ng tin s·∫£n ph·∫©m!",
                                "L·ªói",
                                JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    // Th√™m m·ªõi s·∫£n ph·∫©m
                    SanphamDTO sp = new SanphamDTO();
                    sp.setMa_sp(maSP);
                    sp.setTenSP(tenSP);
                    sp.setDonGia(donGia);
                    sp.setMa_loai(maLoai);
                    sp.setCreated_at(new java.util.Date());
                    
                    //System.out.println(">>> DonGia parse: " + txtGia.getText().trim());
                   // System.out.println(">>> DonGia double: " + donGia);

             
                
                    ChiTietSanPhamDTO ctsp = new ChiTietSanPhamDTO();
                    ctsp.setMa_sp(maSP);
                    ctsp.setRam(ram);
                    ctsp.setChip(cpu);
                    ctsp.setCard(card);
                    ctsp.setGia_ban(donGia);
                   

                
                    boolean spSuccess = sanPhamBUS.AddSanpham(sp);
                    if (spSuccess) {
                        boolean ctspSuccess = chiTietSanPhamBUS.AddChiTietSanpham(ctsp);
                        if (ctspSuccess) {
                            JOptionPane.showMessageDialog(
                                    this,
                                    "Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!",
                                    "Th√¥ng b√°o",
                                    JOptionPane.INFORMATION_MESSAGE);
                            this.dispose(); // ƒê√≥ng form sau khi th√™m
                        } else {
                            JOptionPane.showMessageDialog(
                                    this,
                                    "Th√™m chi ti·∫øt s·∫£n ph·∫©m th·∫•t b·∫°i!",
                                    "L·ªói",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(
                                this,
                                "Th√™m s·∫£n ph·∫©m th·∫•t b·∫°i!\nVui l√≤ng ki·ªÉm tra m√£ s·∫£n ph·∫©m c√≥ b·ªã tr√πng kh√¥ng.",
                                "L·ªói",
                                JOptionPane.ERROR_MESSAGE);
                    }

                }
            
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        this,
                        "L·ªói: " + e.getMessage(),
                        "L·ªói",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveBtn5ActionPerformed

    private void txtMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSPActionPerformed

    private void txtGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public void disableFieldForUpdate() {
        // m√£ nh√¢n vi√™n
        txtMaSP.setEditable(false);
        txtMaSP.setBackground(new java.awt.Color(240, 240, 240));
        
        //ng√†y sinh
        
    }
    public void setDataForUpdate(SanphamDTO sp) {
    if (sp != null) {
        isUpdateMode = true;
        maSanPhamForUpdate = sp.getMa_sp();
        ChiTietSanPhamDTO ctsp = chiTietSanPhamBUS.getCTSPByMaSP(sp.getMa_sp());

        // ƒê·ªï d·ªØ li·ªáu v√†o c√°c tr∆∞·ªùng
        txtMaSP.setText(sp.getMa_sp());
        txtTenSP.setText(sp.getTenSP());
        txtRAM.setText(ctsp.getRam());
        txtCPU.setText(ctsp.getChip());
        txtCard.setText(ctsp.getCard());
        txtGia.setText(String.valueOf((long) ctsp.getGia_ban()));





        // Set lo·∫°i s·∫£n ph·∫©m
        dsLoai = loaiBUS.getList();
        for (LoaisanphamDTO loai : dsLoai) {
            cbLoaiSP.addItem(loai.getTen_loai());
            if (loai.getMa_loai().equals(sp.getMa_loai())) {
                cbLoaiSP.setSelectedItem(loai.getTen_loai());
            }
        }
    }
}

    private boolean validateInput() {
        // Ki·ªÉm tra m√£ s·∫£n ph·∫©m
        String maSP = txtMaSP.getText().trim();
        if (maSP.isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p m√£ s·∫£n ph·∫©m!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtMaSP.requestFocus();
            return false;
        }

        if (sanPhamBUS.getSanphamByMaSP(maSP) != null && !isUpdateMode) {
            JOptionPane.showMessageDialog(this, "M√£ s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return false;
        }   


    
        // Ki·ªÉm tra t√™n s·∫£n ph·∫©m
        if (txtTenSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p t√™n s·∫£n ph·∫©m!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtTenSP.requestFocus();
            return false;
        }

    
        // Ki·ªÉm tra RAM
        if (txtRAM.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p th√¥ng s·ªë RAM!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtRAM.requestFocus();
            return false;
        }

    
        // Ki·ªÉm tra CPU
        if (txtCPU.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p th√¥ng s·ªë CPU!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtCPU.requestFocus();
            return false;
        }

    
        // Ki·ªÉm tra Card
        if (txtCard.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p th√¥ng s·ªë Card ƒë·ªì h·ªça!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtCard.requestFocus();
            return false;
        }

    
        // Ki·ªÉm tra gi√°
        String giaStr = txtGia.getText().trim();
        if (giaStr.isEmpty()) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng nh·∫≠p ƒë∆°n gi√° s·∫£n ph·∫©m!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    txtGia.requestFocus();
            return false;
        }

    
        try {
            double gia = Double.parseDouble(giaStr);
            if (gia < 0) {
                JOptionPane.showMessageDialog(
                this,
                        "Gi√° s·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c √¢m!",
                        "L·ªói",
                        JOptionPane.WARNING_MESSAGE);
                        txtGia.requestFocus();
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
            this,
                    "ƒê∆°n gi√° kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p s·ªë.",
                    "L·ªói",
                    JOptionPane.ERROR_MESSAGE);
                    txtGia.requestFocus();
            return false;
        }

    
        // Ki·ªÉm tra lo·∫°i s·∫£n ph·∫©m
        /*if (cbLoaiSP.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(
            this,
                    "Vui l√≤ng ch·ªçn lo·∫°i s·∫£n ph·∫©m!",
                    "L·ªói",
                    JOptionPane.WARNING_MESSAGE);
                    cbLoaiSP.requestFocus();
            return false;
        }*/

    
        return true;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPhamForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpdateSanPhamForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbLoaiSP;
    private javax.swing.JPanel information_panel;
    private javax.swing.JButton saveBtn5;
    private javax.swing.JTextField txtCPU;
    private javax.swing.JTextField txtCard;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtRAM;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
