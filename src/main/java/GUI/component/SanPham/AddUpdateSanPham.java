/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.component.SanPham;

import BUS.LoaisanphamBUS;
import DTO.LoaisanphamDTO;
import BUS.SanphamBUS;
import DTO.SanphamDTO;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author mrben
 */
public class AddUpdateSanPham extends javax.swing.JFrame {
    private LoaisanphamBUS loaiSPBUS;
    private ArrayList<LoaisanphamDTO> listLoaiSP;
    private SanphamBUS sanphamBUS;

    /**
     * Creates new form AddUpdateSanPham
     */
    public AddUpdateSanPham() {
        initComponents();

        loaiSPBUS = new LoaisanphamBUS();
        sanphamBUS = new SanphamBUS();

        // load loại sản phẩm vào combobox
        loadLoaiSanPhamComboBox();

        // Thêm sự kiện cho nút Lưu và Hủy
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void loadLoaiSanPhamComboBox() {
        // Lấy danh sách loại sản phẩm từ BUS
        listLoaiSP = loaiSPBUS.getAllLoaisanpham();

        // Xóa tất cả các item hiện có trong combobox
        cboLoaiSP.removeAllItems();

        // Kiểm tra xem danh sách có dữ liệu không
        if (listLoaiSP == null || listLoaiSP.isEmpty()) {
            System.out.println("Danh sách loại sản phẩm trống");
            return;
        }

        // Thêm các loại sản phẩm vào combobox
        for (LoaisanphamDTO loaiSP : listLoaiSP) {
            cboLoaiSP.addItem(loaiSP.getTen_loai());
        }
    }

    /**
     * Phương thức để lấy mã loại sản phẩm từ tên loại được chọn trong combobox
     */
    private String getMaLoaiFromTenLoai(String tenLoai) {
        for (LoaisanphamDTO loaiSP : listLoaiSP) {
            if (loaiSP.getTen_loai().equals(tenLoai)) {
                return loaiSP.getMa_loai();
            }
        }
        return null;
    }

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {
        // Lấy dữ liệu từ form
        String maSP = txtMaSP.getText().trim();
        String tenSP = txtTenSP.getText().trim();
        String tenLoai = cboLoaiSP.getSelectedItem() != null ? cboLoaiSP.getSelectedItem().toString() : "";
        String chip = txtChip.getText().trim();
        String card = txtCard.getText().trim();
        String ram = txtRam.getText().trim();
        String giaBanText = txtGiaBan.getText().trim();

        // Kiểm tra dữ liệu
        if (maSP.isEmpty() || tenSP.isEmpty() || tenLoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin bắt buộc!", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra định dạng mã sản phẩm
        if (!maSP.matches("SP\\d+")) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm phải bắt đầu bằng 'SP' và theo sau là số!", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra và chuyển đổi giá bán
        double giaBan = 0;
        try {
            // Loại bỏ dấu phẩy nếu có
            giaBanText = giaBanText.replace(",", "");
            giaBan = Double.parseDouble(giaBanText);
            if (giaBan <= 0) {
                JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá bán không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy mã loại từ tên loại
        String maLoai = getMaLoaiFromTenLoai(tenLoai);
        if (maLoai == null) {
            JOptionPane.showMessageDialog(this, "Loại sản phẩm không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tạo đối tượng SanphamDTO
        SanphamDTO sp = new SanphamDTO();
        sp.setMa_sp(maSP);
        sp.setTenSP(tenSP);
        sp.setMa_loai(maLoai);
        sp.setChip(chip);
        sp.setCard(card);
        sp.setRam(ram);
        sp.setGia_ban(giaBan);
        sp.setSo_luong_ton(0); // Mặc định số lượng tồn ban đầu là 0
        sp.setTrang_thai(1); // Mặc định trạng thái là 1 (hoạt động)

        // Thêm sản phẩm
        if (sanphamBUS.AddSanpham(sp)) {
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công!", "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); // Đóng form sau khi thêm thành công
        } else {
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thất bại! Mã sản phẩm có thể đã tồn tại.", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose(); // Đóng form khi nhấn nút Hủy
    }

    /**
     * Đổ dữ liệu sản phẩm vào form để cập nhật
     */
    public void setDataForUpdate(SanphamDTO sp) {
        // format gia ban
        DecimalFormat formatter = new DecimalFormat("#,###");
        
        // Đặt dữ liệu vào các trường
        txtMaSP.setText(sp.getMa_sp());
        txtTenSP.setText(sp.getTenSP());
        txtChip.setText(sp.getChip());
        txtCard.setText(sp.getCard());
        txtRam.setText(sp.getRam());
        txtGiaBan.setText(formatter.format(sp.getGia_ban()));

        // Chọn loại sản phẩm trong combobox
        for (int i = 0; i < cboLoaiSP.getItemCount(); i++) {
            String tenLoai = cboLoaiSP.getItemAt(i);
            String maLoai = getMaLoaiFromTenLoai(tenLoai);
            if (maLoai != null && maLoai.equals(sp.getMa_loai())) {
                cboLoaiSP.setSelectedIndex(i);
                break;
            }
        }

        // Thay đổi tiêu đề
        jLabel1.setText("CẬP NHẬT SẢN PHẨM");

        // Thay đổi hành động của nút Lưu để cập nhật thay vì thêm mới
        btnLuu.removeActionListener(btnLuu.getActionListeners()[0]);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt, sp);
            }
        });
    }

    /**
     * Vô hiệu hóa trường mã sản phẩm khi cập nhật
     */
    public void disableFieldForUpdate() {
        txtMaSP.setEditable(false);
        txtMaSP.setBackground(new java.awt.Color(240, 240, 240));
    }

    /**
     * Xử lý sự kiện khi nhấn nút Lưu trong chế độ cập nhật
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt, SanphamDTO oldSP) {
        // Lấy dữ liệu từ form
        String maSP = txtMaSP.getText().trim();
        String tenSP = txtTenSP.getText().trim();
        String tenLoai = cboLoaiSP.getSelectedItem() != null ? cboLoaiSP.getSelectedItem().toString() : "";
        String chip = txtChip.getText().trim();
        String card = txtCard.getText().trim();
        String ram = txtRam.getText().trim();
        String giaBanText = txtGiaBan.getText().trim();

        // Kiểm tra dữ liệu
        if (tenSP.isEmpty() || tenLoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin bắt buộc!", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra và chuyển đổi giá bán
        double giaBan = 0;
        try {
            // Loại bỏ dấu phẩy nếu có
            giaBanText = giaBanText.replace(",", "");
            giaBan = Double.parseDouble(giaBanText);
            if (giaBan <= 0) {
                JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá bán không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy mã loại từ tên loại
        String maLoai = getMaLoaiFromTenLoai(tenLoai);
        if (maLoai == null) {
            JOptionPane.showMessageDialog(this, "Loại sản phẩm không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tạo đối tượng SanphamDTO
        SanphamDTO sp = new SanphamDTO();
        sp.setMa_sp(maSP);
        sp.setTenSP(tenSP);
        sp.setMa_loai(maLoai);
        sp.setChip(chip);
        sp.setCard(card);
        sp.setRam(ram);
        sp.setGia_ban(giaBan);
        sp.setSo_luong_ton(oldSP.getSo_luong_ton()); // Giữ nguyên số lượng tồn
        sp.setTrang_thai(oldSP.getTrang_thai()); // Giữ nguyên trạng thái

        // Cập nhật sản phẩm
        if (sanphamBUS.SetSanpham(sp)) {
            JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thành công!", "Thông báo",
                    JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); // Đóng form sau khi cập nhật thành công
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thất bại!", "Lỗi",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboLoaiSP = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtChip = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCard = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtRam = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtGiaBan = new javax.swing.JTextField();
        btnLuu = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("THÊM SẢN PHẨM MỚI");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin sản phẩm",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel2.setText("Mã sản phẩm:");

        jLabel3.setText("Tên sản phẩm:");

        jLabel4.setText("Loại sản phẩm:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMaSP)
                                        .addComponent(txtTenSP)
                                        .addComponent(cboLoaiSP, 0, 250, Short.MAX_VALUE))
                                .addContainerGap(215, Short.MAX_VALUE)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(15, Short.MAX_VALUE)));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết sản phẩm",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel5.setText("Chip:");

        jLabel6.setText("Card:");

        jLabel7.setText("RAM:");

        jLabel8.setText("Giá bán:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtChip)
                                        .addComponent(txtCard)
                                        .addComponent(txtRam, javax.swing.GroupLayout.DEFAULT_SIZE, 250,
                                                Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8)
                                .addGap(37, 37, 37)
                                .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(txtGiaBan, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(txtCard, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtRam, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(15, Short.MAX_VALUE)));

        btnLuu.setBackground(new java.awt.Color(0, 204, 204));
        btnLuu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setText("Lưu");

        btnHuy.setBackground(new java.awt.Color(255, 51, 51));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnHuy.setForeground(new java.awt.Color(255, 255, 255));
        btnHuy.setText("Hủy");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel1Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(15, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUpdateSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUpdateSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLuu;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtCard;
    private javax.swing.JTextField txtChip;
    private javax.swing.JTextField txtGiaBan;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtRam;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
